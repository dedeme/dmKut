// Copyright 18-Apr-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Type d<Profits>. Profits data.

/// Constructor
///   Description: Origin description.
///   hits       : Number of hits.
///   fails      : Number of fails.
///   amount     : Profits amount.
/// \s, i, i, f -> d<Profits>
new = \description, hits, fails, amount -> return {
  description: description,
  hits: hits,
  fails: fails,
  amount: amount
};;

/// Returns the sum of 'Ps' in a new <Profits> with a fresh description.
///   Ps: Array of <Profits> to add.
///   description: Description of the resultant <Profits>.
/// \[<Profits>...], s -> <Profits>
sum = \Ps, description -> {
  Hits = [0];
  Fails = [0];
  Amount = [0.0];
  for (P = Ps) {
    Hits! += P.hits;
    Fails! += P.fails;
    Amount! += P.amount;
  }
  return new(description, Hits!, Fails!, Amount!);
};

/// \<Profits> -> [*(JS)...]
toJs = \P -> return [P.description, P.hits, P.fails, P.amount];;

/// \[*(JS)...] -> <Profits>
fromJs = \A -> return new(
    A[0],
    math.ftoi(A[1]),
    math.ftoi(A[2]),
    A[3]
  );;
