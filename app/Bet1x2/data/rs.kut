// Copyright 12-Apr-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Type a<Rs>. Scores of a single match.

import "data/cts";

/// Field index 0. Home score.
home = 0;
/// Field index 1. Out score.
out = 1;

/// Constructor.
///   home: Score of home team.
///   out : Score of out team.
/// \i, i -> <Rs>
new = \home, out -> return [home, out];;

/// Returns 'true' if both scores, home and out, are equals.
/// \<Rs>, <Rs> -> b
eq = \R1, R2 -> return R1[0] == R2[0] & R1[1] == R2[1];;

/// Returns the value 1x2 of a 'Rs'. Returns is one of 'cts.r1', 'cts.rx' or
/// 'cts.r2'.
/// \<Rs> -> i
value = \R -> return R[0] > R[1] ? cts.r1 : R[1] > R[0] ? cts.r2 : cts.rx;;

/// \[*(JS)...] -> <Rs>
fromJs = \A -> return new(
    math.ftoi(A[0]),
    math.ftoi(A[1])
  );;

/// \[*(JS)...] -> [([<Rs>]|[])...]
rowFromJs = \A -> return arr.map(
    A, \Cell -> return Cell ? [fromJs(Cell!)] : [];
  );;
