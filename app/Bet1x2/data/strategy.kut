// Copyright 14-Apr-2022 ºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Type d<Strategy>. Bet strategy data.

import "data/rs";
import "data/bet";
import "data/decision";

/// Constructor.
///   id: Function which returns the strategy identifier.
///   doc: Function which returns the stragegy documentation.
///   decision: Functión to decide bet. It returns: 'cts.r1', 'cts.rx' or 'cts.r2'.
///             Its parameters are points and bet.
/// \(\->s), (\->s), (\<Rs>, <Bet>->i) -> d<Strategy>
new = \id, doc, decision -> {
  return {
    id: id,
    doc: doc,
    decision: decision
  };
};

/// Returns profits of a match.
///   Strategy: Strategy to decide.
///   Result  : Match result.
///   Points  : Teams points.
///   Bet     : Market bet.
/// \<Strategy>, <Rs>, <Rs>, <Bet> -> f
profits = \Strategy, Result, Points, Bet -> {
  d = Strategy.decision(Points, Bet);
  r = rs.value(Result);
  return r == d ? bet.incomes(Bet, r) - 1.0 : -1.0;
};
