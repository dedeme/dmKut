// Copyright 12-Apr-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Web pages management.

import "libdm/cgi";
import "data/cts";
import "web/main";
import "web/home";
import "web/standings";
import "web/pointsPg";
import "web/betsPg";
import "web/docPg";
import "web/changePass";
import "web/profits/allTotal";
import "web/profits/yearTotal";
import "web/profits/allStrategy";
import "web/profits/yearStrategy";

/// Process a web request.
process = \rq -> {

  ix = str.index(rq, ":");

  // CONNECTION --------------------------------------------------------------

  if (ix == -1) {
    sys.print(cgi.connect(rq));
    return;
  }

  // AUTHENTICATION ----------------------------------------------------------

  if (ix == 0) {
    key = cryp.key(cts.appName, cgi.klen);
    data = cryp.decode(key, rq[1:]);
    Ps = str.split(data, ":");
    sys.print(cgi.authentication(key, Ps[0], Ps[1], Ps[2] == "1"));
    return;
  }

  // NORMAL DATA -------------------------------------------------------------

  sessionId = rq[:ix];
  ConKey = [""];
  Rest = [rq[ix + 1:]];
  ix2 = str.index(Rest!, ":");
  if (ix2 != -1) {
    ConKey! = Rest![:ix2];
    Rest! = Rest![ix2 + 1:];
  }
  ComKey = cgi.getComKey(sessionId, ConKey!);
  if (arr.size(ComKey) == 0) {
    sys.print(cgi.rpExpired());
  } else {
    j = cryp.decode(ComKey!, Rest!);
    Data = js.ro(j);
    sys.print(processHub(Data));
  }

};

// \m -> s
processHub = \Rq -> {
  source = js.rs(Rq.source);
  return switch (source) {
    "Main": main.process(Rq);
    "Home": home.process(Rq);
    "AllTotal": allTotal.process(Rq);
    "YearTotal": yearTotal.process(Rq);
    "AllStrategy": allStrategy.process(Rq);
    "YearStrategy": yearStrategy.process(Rq);
    "Standings": standings.process(Rq);
    "PointsPg": pointsPg.process(Rq);
    "BetsPg": betsPg.process(Rq);
    "DocPg": docPg.process(Rq);
    "ChangePass": changePass.process(Rq);
    default: sys.throw("Value of source (" + source + ") is not valid");
  };
};


