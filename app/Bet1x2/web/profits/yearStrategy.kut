// Copyright 18-Apr-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// All the years profits of one strategy view.

import "dm/cgi";
import "db";
import "strategies";
import "data/cts";
import "data/profits";
import "data/decision";

// \<Strategy>, [[([<Rs]|[])...]...], [[([<Rs]|[])...]...],
//   [[([<Rs]|[])...]...] -> [[([<Decision>]|[])...]...]
decs = \S, Results, Points, Bets -> return arr.fromIter(iter.mp(
  [0:arr.size(Results)],
  \row -> return arr.fromIter(iter.mp(
    [0:arr.size(Results)],
    \col -> {
      R = Results[row][col];
      P = Points[row][col];
      B = Bets[row][col];
      if (arr.empty(R) | arr.empty(P) | arr.empty(B)) return [];
      return [decision.new(R!, P!, B!, S.decision(P!, B!))];
    }
  ));
));;

///
process = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "idata": {
      S = strategies.get(js.rs(Rq.strategy));
      y = js.rs(Rq.year);
      Cteams = db.teams(y).read();
      Results = db.results(y).read();
      Points = db.points(y).read();
      Bets = db.bets(y).read();
      Pfs = strategies.yearProfits(S, S.id, Results, Points, Bets);
      return cgi.rp({
        teams: js.wa(arr.mp(
          Cteams,
          \ct -> return js.wa([js.ws(ct), js.ws(cts.Teams[ct])]);
        )),
        decisions: js.wa(arr.mp(
          decs(S, Results, Points, Bets),
          \row -> return js.wa(arr.mp(
            row,
            \Cell -> return arr.empty(Cell) ? js.wn() : decision.toJs(Cell!);
          ));
        )),
        profits: profits.toJs(Pfs)
      });
    }
    default: sys.fail("Value of rq (" + rq + ") is not valid");
  };
};
