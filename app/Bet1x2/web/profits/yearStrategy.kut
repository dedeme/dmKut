// Copyright 18-Apr-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// All the years profits of one strategy view.

import "libdm/cgi";
import "db";
import "strategies";
import "data/cts";
import "data/profits";
import "data/decision";

// \<Strategy>, [[([<Rs]|[])...]...], [[([<Rs]|[])...]...],
//   [[([<Rs]|[])...]...] -> [[([<Decision>]|[])...]...]
decs = \S, Results, Points, Bets -> return arr.fromIter(iter.map(
  [0:arr.size(Results)],
  \row -> return arr.fromIter(iter.map(
    [0:arr.size(Results)],
    \col -> {
      R = Results[row][col];
      P = Points[row][col];
      B = Bets[row][col];
      if (!R | !P | !B) return [];
      return [decision.new(R!, P!, B!, S.decision(P!, B!))];
    }
  ));
));;

///
process = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "idata": {
      S = strategies.get(js.rs(Rq.strategy));
      y = js.rs(Rq.year);
      Cteams = db.teams(y).read();
      Results = db.results(y).read();
      Points = db.points(y).read();
      Bets = db.bets(y).read();
      Pfs = strategies.yearProfits(S, S.id, Results, Points, Bets);
      return cgi.rp({
        teams: js.w(arr.map(
          Cteams,
          \ct -> return [ct, cts.Teams[ct]];
        )),
        decisions: js.w(decs(S, Results, Points, Bets)),
        profits: js.w(profits.toJs(Pfs))
      });
    }
    default: sys.throw("Value of rq (" + rq + ") is not valid");
  }
};
