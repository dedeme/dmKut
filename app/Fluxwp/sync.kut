// Copyright 05-Jan-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Synchronization with Wallpapers.

import "db";
import "art";

/// Runs synchronization.
/// \-> ()
run = \-> {
  pictsPath = db.pictsPath();
  trashPath = db.trashPath();
  art.TargetDir! = pictsPath;

  Stock = file.dir(pictsPath) + file.dir(trashPath);
  Source = [];
  for (group = 0:10) {
    art.SourceDir! = path.cat([db.sourcePath, math.toStr(group)]);

    groupPicts = arr.mp(
      arr.filter(db.sourcePictsDb(group).read(), \P ->
        return P.level == 3;
      ),
      \P -> return P.id;
    );

    for (imgSource = groupPicts) {
      arr.push(Source, imgSource);
      if (!arr.any(Stock, \im -> return im == imgSource;)) {
        art.defaultConversion(imgSource);
      }
    }
  }

  Picts = file.dir(pictsPath);
  Trash = file.dir(trashPath);
  for (imgTrash = Trash)
    if (arr.any(Picts, \im -> return im == imgTrash;))
      file.del(path.cat([trashPath, imgTrash]));

  NewStock = Picts + file.dir(trashPath);
  for (imgTarget = NewStock) {
    if (!arr.any(Source, \im -> return im == imgTarget;)) {
      fpath = path.cat([pictsPath, imgTarget]);
      if (file.exists(fpath)) file.del(fpath);
      else file.del(path.cat([trashPath, imgTarget]));
    }
  }


};
