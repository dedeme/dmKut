// Copyright 21-Aug-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Nick results.

import "data/simRs";

/// Creates a new nkRs of type array.
///   nick: Company nick + 'IBEX'.
///   Closes: Company closes used to calculate results.
///   Refs: Reference used to calculate results.
///   PropResults: Results with proportional initial capital.
///   PondResults: Results with ponderated intial capital.
/// \s, [f...], [f...], <simRs>, <simRs>  -> <nkRs>
new = \nick, Closes, Refs, PropResults, PondResults ->
  return [nick, Closes, Refs, PropResults, PondResults];;

///
toJs = \R -> return js.wa([
    js.ws(R[0]),
    js.wa(arr.mp(R[1], \c -> return js.wf2(c, 4);)),
    js.wa(arr.mp(R[2], \c -> return js.wf2(c, 4);)),
    simRs.toJs(R[3]),
    simRs.toJs(R[4])
  ]);;

///
fromJs = \j -> {
  A = js.ra(j);
  return new(
    js.rs(A[0]),
    arr.mp(js.ra(A[1]), js.rf),
    arr.mp(js.ra(A[2]), js.rf),
    simRs.fromJs(A[3]),
    simRs.fromJs(A[4])
  );
};
