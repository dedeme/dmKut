// Copyright 20-Aug-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Web pages management.

import "dm/cgi";
import "dm/log";
import "data/cts";
import "data/market";
import "data/model";
import "db";

/// Process a request.
/// \s -> ()
process = \rq -> {
  ix = str.index(rq, ":");

  // CONNECTION --------------------------------------------------------------

  if (ix == -1) {
    sys.print(cgi.connect(rq));
    return;
  }

  // AUTHENTICATION ----------------------------------------------------------

  if (ix == 0) {
    key = cryp.key(cts.appName, cgi.klen);
    data = cryp.decode(key, rq[1:]);
    Ps = str.split(data, ":");
    sys.print(cgi.authentication(key, Ps[0], Ps[1], Ps[2] == "1"));
    return;
  }

  // NORMAL DATA -------------------------------------------------------------

  sessionId = rq[:ix];
  ConKey = [""];
  Rest = [rq[ix + 1:]];
  ix2 = str.index(Rest!, ":");
  if (ix2 != -1) {
    ConKey! = Rest![:ix2];
    Rest! = Rest![ix2 + 1:];
  }
  ComKey = cgi.getComKey(sessionId, ConKey!);
  if (arr.size(ComKey) == 0) {
    sys.print(cgi.rpExpired());
  } else {
    j = cryp.decode(ComKey!, Rest!);
    Data = js.ro(j);
    sys.print(processHub(Data));
  }

};

// PROCESSES -----------------------------------------------------------------

// \m -> s
processHub = \Rq -> {
  source = js.rs(Rq.source);
  return switch (source) {
    "Main": mainProcess(Rq);
    "Home": homeProcess(Rq);
    "ChangePass": changePassProcess(Rq);
    default: sys.fail("Value of source (" + source + ") is not valid");
  };
};

// \m -> s
mainProcess = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "close": return cgi.delSession(js.rs(Rq.sessionId));
    "idata": return cgi.rp({
      "market": market.toJs(
          js.wa(arr.mp(model.list(), model.toJsPartial)),
          db.nkpond().readJs(),
          js.wa(arr.mp(db.qibex().read(), \e -> return js.ws(e[0]);)),
          db.rsTb().readJs()
        )
      });
    default: sys.fail("Value of rq (" + rq + ") is not valid");
  }
};

// \m -> s
homeProcess = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "getLog": return cgi.rp({
        "log": log.readJs()
      });
    default: sys.fail("Value of rq (" + rq + ") is not valid");
  }
};

// \m -> s
changePassProcess = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "changePass": return cgi.changePass(
      js.rs(Rq.user),
      js.rs(Rq.old),
      js.rs(Rq.new)
    );
    default: sys.fail("Value of rq (" + rq + ") is not valid");
  };
};


