// Copyright 01-Mar-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Alarm data.

/// Constructor.
///   id: Identifier.
///   tm: Time (milliseconds) with minute precision.
/// \s,i -> <alarm>
mk : id, tm;

/// \[*] -> <alarm>
fromJs = \A -> return [
    A[0],
    math.ftoi(A[1])
  ];;

/// Removes in place obsolete alarms
/// \[<alarm>.] -> ()
update = \:arr As -> {
  top = time.now() - 180000; // -3 minutes
  As.filterIn(\a -> {
    return a[tm] > top;
  });
};

// Returns 1, 0 or +1 depending on whether 'A1[1]' is >, == or < than 'A2[1]'.
// \<alarm>, <alarm> -> i
cmp = \a1, a2 -> {
  fmt = "%Y%M%D%t";
  d1 = time.fmt(a1[tm], fmt)[:-3];
  d2 = time.fmt(a2[tm], fmt)[:-3];
  return d1 > d2 ? 1 : d1 < d2 ? -1 : 0;
};

/// Adds in place a new alarm to an array. If its time is duplicated, function
/// does nothing and returns 'false'. Otherwise, returns 'true'.
/// \[<alarm>.], <alarm> -> b
add = \:arr As, a -> {
  if (As.any(\a0 -> return cmp(a0, a) == 0;)) return false;
  As.push(a);
  return true;
};

/// Removes in place any alarm of 'As' with its same time.
/// \[<alarm>.], <alarm> -> ()
del = \:arr As, a -> As.filterIn(\a0 -> return cmp(a0, a) != 0;);;
