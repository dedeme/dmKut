// Copyright 05-Nov-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Home page.

import "KtWeb/rp";
import "db";
import "data/alarm";
import "data/cts";

/// \m -> ()
process = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "idata": {
      AlarmsTb = db.alarmsTb();
      As = AlarmsTb.read();
      alarm.update(As);
      AlarmsTb.write(As);
      sys.print(rp.mk({
        alarms: AlarmsTb.readJs()
      }));
    }
    "add": {
      key = js.rs(Rq.key);
      tmSec = js.rf(Rq.tm);
      AlarmsTb = db.alarmsTb();
      As = AlarmsTb.read();
      isDup = !alarm.add(As, alarm.new(key, tmSec));
      if (!isDup) {
        AlarmsTb.write(As);
        thread.run(\-> {
          sys.cmd("kut", [cts.mainPath, "alarm!", key]);
        });
        sys.sleep(500);
      }
      sys.print(rp.mk({
          isDup: js.wb(isDup)
        }));
    }
    "del": {
      A = alarm.fromJs(Rq.alarm);
      AlarmsTb = db.alarmsTb();
      As = AlarmsTb.read();
      alarm.del(As, A);
      AlarmsTb.write(As);
      sys.print(rp.mkEmpty());
    }
    default: sys.fail("Value of rq (" + rq + ") is not valid");
  }
};

