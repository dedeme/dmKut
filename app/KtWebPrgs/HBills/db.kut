// Copyright 16-Nov-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Data base.

import "KtWeb/global";
import "libdm/jstb";
import "data/cts";
import "data/accAnn";
import "data/monthAnn";

// EXTERN DATA BASE

/// Current year
/// i
year = time.year(time.now());

/// Years range (from [0] to [1] both inclusive - see 'readBills()')
/// [i, i]
YearsRange = [
  (year - 5 > 2022) ? year - 5 : 2022,
  year
];

/// Read hollidays (bills) annotations.
/// \-> [<monthAnn>...]
readBills = \ -> {
  R = [];
  Month = [math.itos(YearsRange[0]) + "01"];
  Sum = [0.0];
  for (year = YearsRange[0] : YearsRange[1] + 1) {
    y = math.itos(year) + ".db";
    pth = path.cat([cts.accPath, y]);
    A = js.ra(file.read(pth));
    for (annJs = js.ra(A[3])) {
      Fields = js.ra(annJs);
      Am = dic.get(js.ro(Fields[2]), cts.billsAcc);
      Am2 = dic.get(js.ro(Fields[3]), cts.staysAcc);
      if (!Am) {
        Am0 = dic.get(js.ro(Fields[3]), cts.billsAcc);
        if (Am0) arr.push(Am, "-" + Am0!);
      }
      if (Am & !Am2) {
        mdate = js.rs(Fields[0])[0:6];
        if (mdate > Month!) {
          arr.push(R, monthAnn.mk(Month!, [], Sum!));
          Month! = mdate;
          Sum! = js.rf(Am!);
        } else {
          Sum! += js.rf(Am!);
        }
      }
    }
  }
  arr.push(R, monthAnn.mk(Month!, [], Sum!));
  return arr.filter(R, \a -> return a[2] > 0.0;);
};

/// Read hotels (stays) annotations.
/// \-> [<accAnn>, ...]
readStays = \ -> {
  R = [];
  for (year = YearsRange[0] : YearsRange[1] + 1) {
    y = math.itos(year) + ".db";
    pth = path.cat([cts.accPath, y]);
    A = js.r(file.read(pth));
    for (i, annJs = A[3]) {
      if (i == 0) continue;
      Fields = annJs;
      Am = year == 2022
        ? Fields[0] == "20220916" ? [] : dic.get(Fields[2], cts.staysAcc22)
        : dic.get(Fields[2], cts.staysAcc)
      ;
      if (Am) {
        arr.push(
          R,
          accAnn.mk(Fields[0], Fields[1], Am!)
        );
      }
    }
  }
  return R;
};

// PROGAM DATA BASE

DbPath = [""];

/// Initializes data base.
/// \-> ()
init = \ -> {
  dbPath = path.cat([global.cgiRoot, cts.appName]);
  DbPath! = dbPath;
  if (!file.exists(dbPath)) file.mkdir(dbPath);
};

/// Returns the table of places in "places.tb"
/// \-> d[s]<jsdb>
placesTb = \-> return jstb.new(
  DbPath! + "/places.tb",
  \-> return {};,
  sys.id,
  sys.id
);;
