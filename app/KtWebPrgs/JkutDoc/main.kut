// Copyright 06-May-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Main page.

import "libdm/jstb";
import "KtWeb/rp";
import "db";
import "data/conf";
import "data/dpath";
import "pgs/pathsPg";
import "pgs/indexPg";
import "pgs/modulePg";
import "pgs/codePg";

Args = sys.args();
ck = Args[0];
Rq = js.r(Args[1]);

db.init();
rp.init(ck);

switch(Rq.source) {
  "Main": process(Rq);
  "PathsPg": pathsPg.process(Rq);
  "IndexPg": indexPg.process(Rq);
  "ModulePg": modulePg.process(Rq);
  "CodePg": codePg.process(Rq);
  default: sys.throw("Value of source (" + Rq.source + ") is not valid");
}

process = \Rq -> {
  switch (Rq.rq) {
    "idata": sys.print(rp.mk({
      conf: db.confTb()[jstb.read](),
      paths: db.pathsTb()[jstb.read]()
    }));
    "savePath": {
      :jstb confTb = db.confTb();
      :conf Cf = confTb.read#();
      confTb.write#(conf.mk(Rq.path, Cf.showAll));
      sys.print(rp.mkEmpty());
    }
    default: sys.throw("Value of rq (" + Rq.rq + ") is not valid");
  }
};
