// Copyright 21-Nov-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Fix page.

import "KtWeb/rp";
import "KtWeb/global";
import "db";
import "data/ann";

/// \m -> ()
process = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "idata": sys.print(rp.mk({
        anns: js.wa(
          arr.mp(
            arr.filter(
              db.annsTb().read(),
              \A -> return A[1] == ann.typeFIX;
            ),
            ann.toJs
          ))
      }));
    "new": {
      Ann = ann.fromJs(Rq.ann);
      AnnTb = db.annsTb();
      Anns = AnnTb.read();
      ann.add(Anns, Ann);
      AnnTb.write(Anns);
      sys.print(rp.mkEmpty());
    }
    "delete": {
      id = js.ri(Rq.id);
      AnnTb = db.annsTb();
      Anns = AnnTb.read();
      ann.del(Anns, id);
      AnnTb.write(Anns);
      sys.print(rp.mkEmpty());
    }
    "modify": {
      Ann = ann.fromJs(Rq.ann);
      AnnTb = db.annsTb();
      Anns = AnnTb.read();
      ann.modify(Anns, Ann);
      AnnTb.write(Anns);
      sys.print(rp.mkEmpty());
    }
    "run": {
      id = js.ri(Rq.id);
      R = ann.executeId(db.annsTb().read(), id);
      error = arr.empty(R) ? "" : R!;
      sys.print(rp.mk({
        error: js.ws(error)
      }));
    }
    default: sys.fail("Value of rq (" + rq + ") is not valid");
  }
};

