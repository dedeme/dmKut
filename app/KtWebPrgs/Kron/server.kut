// Copyright 27-Apr-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Kron server.

import "libdm/log";
import "db/annsTb";
import "data/ann";

//pt = "/dm/dmWeb/app/KtWeb/dmcgi/Kron/tmp.txt";

/// Server start.
/// \-> ()
start = \ -> {
  // Periodic command historic
  Done = []; // [i, i]::[AnnId, Time]

  while () {
    // PROCESS

    tm = time.now();
    wday0 = time.weekday(tm) - 1;
    wday = wday0 == -1 ? 6 : wday0; // Compatible with 'cmdWday'(A[2])
    :arr Anns = annsTb.read();

    // Remove old commands from periodic command historic
    tm2 = tm - 240000; // tm - 4 minutes
    Done.filterIn(\IdTm -> return IdTm[1] >= tm2;);

    // Execute periodic commands
    PeriodicToExecs = arr.filter(
      Anns.filter(
        \:ann a -> {
            if (a.type == ann.typePERIODIC) {
              Data = js.ra(a.data);
              if (arr.any(js.ra(Data[1]), \wd -> return js.ri(wd) == wday;)) {
                t0 = math.ftoi(js.rf(Data[0]) * 1000.0);
                cmdTm = time.new(
                  time.day(tm), time.month(tm), time.year(tm),
                  time.hour(t0), time.minute(t0), 0
                );
                cmdTm2 = cmdTm + 120000; // cmdTm + 2 minutes
                return tm >= cmdTm & tm <= cmdTm2;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }
      ),
      \:ann a -> return !Done.any(\IdTm -> return IdTm[0] == a.id;);
    );
    for (:ann a = PeriodicToExecs) {
      Done.push([a.id, tm]);
      a.execute();
      log.warning("Executed:\n" + a.text);
    }

    // Execute fix commands
    FixToExecs = Anns.filter(
      \:ann a -> {
        if (a.type == ann.typeFIX) {
          return math.ftoi(js.rf(a.data) * 1000.0) <= tm;
        } else {
          return false;
        }
      }
    );
    for (:ann a = FixToExecs) {
      ann.del(Anns, a.id);
      annsTb.write(Anns);
      a.execute();
      log.warning("Executed:\n" + a.text);
    }

    // END PROCESS

    sys.sleep(6000);
  }
};
