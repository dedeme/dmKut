// Copyright 27-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Data base initializer

import "libdm/jstb";
import "libdm/log";
import "data/ibexSundays";
import "data/modelEvals";
import "data/modelFloats";
import "data/hotMap";
import "ex/ktmmarket/evals";
import "ex/ktmmarket/results";
import "data/cts";
import "fns";

///
init = \-> {
  if (!file.exists(cts.dbPath)) {
    file.mkdir(cts.dbPath);
    file.mkdir(path.cat([cts.dbPath, "simulation"]));
    file.mkdir(path.cat([cts.dbPath, "hotMaps"]));
  }
};

/// Returns model evaluations table of several dates.
/// \-> <Jstb> of [<ModelEvals>...]
modelEvalsTb = \-> return jstb.newArr(
  path.cat([cts.dbPath, "modelEvals.tb"]),
  \-> return [modelEvals.toJs(modelEvals.new(
    fns.lastSunday(),
    evals.ranking()
  ))];,
  modelEvals.toJs,
  modelEvals.fromJs
);;

/// Returns total profits of each model in simulation.
/// \-> <Jstb> of [<ModelFloats>...]
totalsModelSimProfitsDb = \-> return jstb.newArr(
  path.cat([cts.dbPath, "simulation", "totals.tb"]),
  \-> return [modelFloats.toJs(modelFloats.new(
    fns.lastSunday(),
    results.totalsRanking()
  ))];,
  modelFloats.toJs,
  modelFloats.fromJs
);;

/// Returns cash profits of each model in simulation.
/// \-> <Jstb> of [<ModelFloats>...]
cashesModelSimProfitsDb = \-> return jstb.newArr(
  path.cat([cts.dbPath, "simulation", "cashes.tb"]),
  \-> return [modelFloats.toJs(modelFloats.new(
    fns.lastSunday(),
    results.cashesRanking()
  ))];,
  modelFloats.toJs,
  modelFloats.fromJs
);;

/// Returns references (risk) profits of each model in simulation.
/// \-> <Jstb> of [<ModelFloats>...]
refsModelSimProfitsDb = \-> return jstb.newArr(
  path.cat([cts.dbPath, "simulation", "refs.tb"]),
  \-> return [modelFloats.toJs(modelFloats.new(
    fns.lastSunday(),
    results.refsRanking()
  ))];,
  modelFloats.toJs,
  modelFloats.fromJs
);;

/// Returns hot dics of a model sorted by date.
/// \s -> <Jstb> of [<HotMap>...]
hotMapsDb = \model -> return jstb.newArr(
  path.cat([cts.dbPath, "hotMaps", model + ".tb"]),
  \-> return [hotMap.new(
    fns.lastSunday(),
    evals.paramsEvals(model)
  )];,
  sys.id,
  hotMap.fromJs
);;

/// Returns a table with sunday ibex values.
/// \-> <Jstb> of <IbexSundays>
ibexTb = \-> return jstb.new(
  path.cat([cts.dbPath, "ibex.tb"]),
  \-> return ibexSundays.toJs(ibexSundays.new([]));,
  ibexSundays.toJs,
  ibexSundays.fromJs
);;
