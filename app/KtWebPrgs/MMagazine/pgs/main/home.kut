// Copyright 03-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Home page.

import "libdm/log";
import "KtWeb/rp";
import "db";
import "db/evalsDb";
import "ex/ktmarket/investors";

/// \m -> s
process = \Rq -> {
  switch (Rq.rq) {
    "idata": {
      Ips = arr.map(
        investors.read(),
        \Ps -> return arr.map(Ps, \p -> return js.r(p););
      );
      Mds = ["APRX", "APRX", "APRX"]; // ordered by investor!
      IParEvals = [];
      ParEvals = [];
      for (i, md = Mds) {
        LastPevs = evalsDb.lastParamsEvals(md);
        if (!LastPevs) sys.throw("Parameters of " + md + " not found");

        IPev = [];
        MaxPev = [LastPevs[0]];
        for (Pev = LastPevs) {
          if (Pev[0] == Ips[i]) arr.push(IPev, Pev);
          if (Pev[1] > MaxPev![1]) MaxPev! = Pev;
        }
        arr.push(IParEvals, IPev ? IPev! : [Ips[i], 0.0]);
        arr.push(ParEvals, MaxPev!);
      }
      return rp.mk({
        "iparamsEvals": IParEvals,
        "models": Mds,
        "paramsEvals": ParEvals
      });
    }
    "getLog": return rp.mkJs({
      "log": log.readJs()
      });
    "resetLog": {
      log.reset();
      return rp.mkEmpty();
    }
    default: sys.throw("Value of rq (" + Rq.rq + ") is not valid");
  }
};
