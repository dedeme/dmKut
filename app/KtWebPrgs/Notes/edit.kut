// Copyright 02-May-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Edit page.

import "KtWeb/rp";
import "db";

/// \{*.} -> s
process = \Rq -> {
  switch (Rq.rq) {
    "idata": {
      isTrash = Rq.isTrash;
      :arr List = db.list(isTrash); // [{id:s, name:s}.]
      List.sort(\E1, E2 -> return E1.id > E2.id;);
      text = !List ? "" : db.read(List[0].id, isTrash);
      return rp.mk({
        dbKey: db.readKey(),
        List,
        text
      });
    }
    "new": {
      dbKey = db.checkKey(Rq.dbKey);
      if (dbKey == "") return rp.mkOutdated();

      db.write(math.itos(time.now()), false, "");
      return rp.mk({ dbKey });
    }
    "download": {
      // s,s
      id, name : Rq;
      text = db.exists(id, false) ? db.read(id, false) : name + " not found";
      return rp.mk({
        dbKey: db.readKey(),
        text
      });
    }
    "remove": {
      dbKey = db.checkKey(Rq.dbKey);
      if (dbKey == "") return rp.mkOutdated();

      id = Rq.id;
      if (db.exists(id, false)) {
        text = db.read(id, false);
        db.remove(id, false);
        if (text != "") db.write(math.itos(time.now()), true, text);
        db.clean();
      }
      return rp.mk({ dbKey });
    }
    "rescue": {
      dbKey = db.checkKey(Rq.dbKey);
      if (dbKey == "") return rp.mkOutdated();

      id = Rq.id;
      if (db.exists(id, true)) {
        text = db.read(id, true);
        db.remove(id, true);
        db.write(math.itos(time.now()), false, text);
      }
      return rp.mk({ dbKey });
    }
    "getText": {
      // b,s
      isTrash, id : Rq;
      text = db.exists(id, isTrash) ? db.read(id, isTrash) : "";
      return rp.mk({
        dbKey: db.readKey(),
        text
      });
    }
    "setText": {
      dbKey = db.checkKey(Rq.dbKey);
      if (dbKey == "") return rp.mkOutdated();

      // s, s
      id , text : Rq;
      db.write(id, false, text);
      return rp.mk({
        dbKey,
        name: db.mkName(text)
      });
    }
    default: sys.throw("Value of rq (" + Rq.rq + ") is not valid");
  }
};

