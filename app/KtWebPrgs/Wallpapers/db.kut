// Copyright 01-May-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Data base management.

import "cts";
import "db/selsTb";
import "db/pictsTb";
import "db/songsTb";
import "db/danceSongsTb";

klen = 20;
dbStateKeyTb = file.cat([cts.dataPath, "dbStateKey.tb"]);

/// Initializes data base
/// \ -> ()
init = \ -> {
  if (!file.exists(cts.dataPath)) {
    file.mkdir(cts.dataPath);
    file.write(file.cat([cts.dataPath, "version.tb"]), cts.dataVersion);
    file.write(dbStateKeyTb, cryp.genK(klen));

    selsTb.init();
    return;
  }
  sys.throw("Data base already is initialized");
};

/// Returns the state identifier.
/// \ -> ()
readKey = \ -> return str.trim(file.read(dbStateKeyTb));;

/// Checks the state identifier 'key' and returns:
///   - If 'key' is valid, a new identifier.
///   - If 'key' is not valid, an empty string.
/// \s -> s
checkKey = \key -> {
  if (str.trim(file.read(dbStateKeyTb)) == key) {
    newKey = cryp.genK(klen);
    file.write(dbStateKeyTb, newKey);
    return newKey;
  }
  return "";
};
