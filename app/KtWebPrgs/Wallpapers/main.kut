// Copyright 01-May-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Main module.

import "KtWeb/rp";
import "cts";
import "db";
import "pgs/mainPg";
import "pgs/picturesPg";
import "pgs/songsPg";
import "pgs/radioPg";
import "pgs/pinupsPg";
import "pgs/danceSelectorPg";
import "pgs/dancePg";
import "pgs/pictsManagementPg";
import "pgs/pinupsManagementPg";
import "pgs/songsManagementPg";
import "pgs/danceManagementPg";
import "pgs/timesPg";
import "wgs/pictTimeWg";
import "wgs/infoWg";

// \ -> s
help = \ -> return """
  Use myPrg [help | version | init | key rq]
  where
    help   : Shows this message.
    version: Shows program version.
    init   : Initializes program.
             Must be called only the first time that the program is run.
    key rq : Requests 'rq' with 'key'. (Sent by browser)
  """;;

:arr Args = sys.args();

if (Args.size() == 1) {
  switch (Args[0]) {
    "version": sys.println(cts.version);
    "init": db.init();
    default: sys.println(help());
  }
  return;
}

if (Args.size() != 2) {
  sys.println(help());
  return;
}

key = Args[0];
rp.init(key);

Rq = js.r(Args[1]);
sys.print(switch(Rq.source) {
  "MainPg": mainPg.process(Rq);
  "PicturesPg": picturesPg.process(Rq);
  "SongsPg": songsPg.process(Rq);
  "RadioPg": radioPg.process(Rq);
  "PinupsPg": pinupsPg.process(Rq);
  "DanceSelectorPg": danceSelectorPg.process(Rq);
  "DancePg": dancePg.process(Rq);
  "PictsManagementPg": pictsManagementPg.process(Rq);
  "PinupsManagementPg": pinupsManagementPg.process(Rq);
  "SongsManagementPg": songsManagementPg.process(Rq);
  "DanceManagementPg": danceManagementPg.process(Rq);
  "TimesPg": timesPg.process(Rq);
  "PictTimeWg": pictTimeWg.process(Rq);
  "InfoWg": infoWg.process(Rq);
  default: sys.throw("Value of source (" + Rq.source + ") is not valid");
});

