// Copyright 01-May-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Songs page

import "KtWeb/rp";
import "cts";
import "data/pict";
import "data/song";
import "db";
import "db/songsTb";
import "db/selsTb";
import "picturesPg";

/// \{*.} -> s
process = \Rq -> {
  rq = Rq.rq;
  switch (rq) {
    "idata": {
      GroupPict = picturesPg.getPicture();
      GroupSong = getSong();
      return rp.mk({
        dbKey: db.readKey(),
        group: GroupPict.group,
        picture: GroupPict.picture,
        songGroup: GroupSong.group,
        ssong: GroupSong.s
      });
    }
    "pictData": {
      GroupPict = picturesPg.getPicture();
      return rp.mk({
        dbKey: db.readKey(),
        group: GroupPict.group,
        picture: GroupPict.picture
      });
    }
    "setLapse": {
      dbKey = db.checkKey(Rq.dbKey);
      if (dbKey == "") return rp.mkOutdated();

      group, ssong, lapse : Rq;
      songsTb.setLapse(group, ssong, math.ftoi(lapse));
      return rp.mk({ dbKey });
    }
    "newSong": {
      dbKey = db.checkKey(Rq.dbKey);
      if (dbKey == "") return rp.mkOutdated();

      currentGroup = selsTb.getSongGroup();
      currentSong = selsTb.getSong();
      songsTb.setLapse(currentGroup, currentSong, 0);
      GroupS = songsTb.next();
      selsTb.setSongGroup(GroupS.group);
      selsTb.setSong(GroupS.s[song.id]);
      return rp.mk({
        dbKey,
        group: GroupS.group,
        ssong: GroupS.s
      });
    }
    default: sys.throw("Value of rq (" + rq + ") is not valid");
  }
};

// \ -> {s, <song>} :: {group, s}
getSong = \ -> {
	group = selsTb.getSongGroup();
	songId = selsTb.getSong();

	SongsOp = group != "" ? [songsTb.read(group)] : [];
	SongOp = !!SongsOp & songId != ""
    ? arr.find(SongsOp!, \:song s -> return songId == s.id;)
    : []
  ;

  if (!SongOp) {
    GroupS = songsTb.next();
    selsTb.setSongGroup(GroupS.group);
    selsTb.setSong(GroupS.s[song.id]);
    return GroupS;
  }

  return {group, s: SongOp!};
};
