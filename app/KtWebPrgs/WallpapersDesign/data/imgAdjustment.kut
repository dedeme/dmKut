// Copyright 22-Dic-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Image 'adjustment' data

/// Creates new 'adjustment' parameters.
///   type: Adjustment type. One of "cut", "background" or "stretch".
///   Params: Paramentes wich meaning depenends on type.
/// \s, [i, ...] -> d<imgAdjustment>
new = \type, Params -> return {type, Params};;

/// Creates a 'imgAdjstment' of type "cut".
///   top: Top value to start cutting.
/// \i -> d<imgAdjustment>
newCut = \top -> return new("cut", [top]);;

/// Creates a 'imgAdjstment' of type "background".
///   color: Backgroun color in format RGB.
///   blur: Ratio of burriness. Value between 0 and 100 (both inclusive).
///   light: Ratio of light. Value between 0 and 100 (both inclusive).
/// \i, i, i -> d<imgAdjustment>
newBackground = \color, blur, light ->
  return new("background", [color, blur, light]);;

/// Creates a 'imgAdjstment' of type "stretch".
///   pixels: Value between 1 and 100 (both inclusive).
/// \i -> d<imgAdjustment>
newStretch = \pixels -> return new("stretch", [pixels]);;

/// \<imgAdjustment> -> [*(JS)...]
toJs = \IA -> return [IA.type, IA.Params];;

/// \[*(JS)...] -> <imgAdjustment>
fromJs = \A -> return new (A[0], arr.map(A[1], math.ftoi));;

