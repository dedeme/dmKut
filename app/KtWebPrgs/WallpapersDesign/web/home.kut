// Copyright 23-Dic-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Home page.

import "KtWeb/rp";
import "db";
import "art";
import "data/cts";
import "data/image";

/// \m -> ()
process = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "idata": {
      for (f = file.dir(cts.targetPath))
        file.del(path.cat([cts.targetPath, f]));
      ImgsData = db.imagesTb().read();
      ImgsSource = file.dir(cts.sourcePath);
      for (im, i = ImgsSource) {
        pt = path.cat([cts.sourcePath, im]);
        im2 = arr.join(arr.mp(
          str.split(im, ""),
          \c -> return (
              (c >= "a" & c <= "z") |
              (c >= "A" & c <= "Z") |
              (c >= "0" & c <= "9") |
              c == "." | c == "@" | c == "_" | c == "+"
            ) ? c : "-";
        ), "");

        if (im != im2) {
          pt2 = path.cat([cts.sourcePath, im2]);
          file.rename(pt, pt2);
          ImgsSource[i] = im2;
        }
      }
      Imgs = image.update(ImgsData, ImgsSource);
      sys.print(rp.mk({
        images: js.wa(arr.mp(Imgs, image.toJs))
      }));
    }
    "idata2": {
      duplicates = db.duplicates(arr.mp(
        file.dir(cts.sourcePath), art.changeExt
      ));
      group = db.lessPicturesGroup();
      sys.print(rp.mk({
        duplicates: js.wa(arr.mp(duplicates, js.ws)),
        group: js.ws(group)
      }));
    }
    "dim": sys.print(rp.mk({
        width: js.wi(db.confTb().read().width),
        height: js.wi(db.confTb().read().height)
      }));
    "save": {
      group = js.rs(Rq.group);
      db.savePictures(group);
      db.clearIntermediatePaths();
      sys.print(rp.mkEmpty());
    }
    "changeDim": {
      confTb = db.confTb();
      conf = confTb.read();
      conf.width = js.ri(Rq.width);
      conf.height = js.ri(Rq.height);
      confTb.write(conf);
      sys.print(rp.mkEmpty());
    }
    default: sys.fail("Value of rq (" + rq + ") is not valid");
  }
};
