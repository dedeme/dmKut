// Copyright 10-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Annotations table data.

import "ann";

//
mk : nextId, Anns;

/// Constructor.
/// \-> x<annsTb>
new = \ -> return mk(0, []);;

/// Returns table annotations.
/// \<annsTb> -> [<ann>...]
anns = \T -> return T[Anns];;

/// Adds a n annotation. 'A.id' will be overwritten.
/// \<annsTb>, <ann> -> ()
add = \Tb, :ann a -> {
  a.id = Tb[nextId];
  arr.push(Tb[Anns], a);
  Tb[nextId] += 1;
};

/// Deletes la annotation with identifier 'id' if exists.
/// \Tb, i -> ()
del = \Tb, i -> {
  ix = arr.index(Tb[Anns], \:ann a -> return a.id == i;);
  if (ix != -1) arr.remove(Tb[Anns], ix);
};

/// \<annsTb> -> JS
toJs = \T -> return [T[nextId], arr.map(T[Anns], ann.toJs)];;

/// \JS -> <annsTb>
fromJs = \A -> return mk(
    math.ftoi(A[0]),
    arr.map(A[1], ann.fromJs)
  );;

