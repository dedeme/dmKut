// Copyright 15-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Information for daily chart.

import "dailyInvestorData";

/// Constructor.
///   nick   : Company nick.
///            There are next extra nicks:
///              cts.meNick, cts.ibexNic, cts.euroNick and cts.usaNick.
///   close  : Previous market day close.
///            - If inv.ref > close, its position is to buy.
///   hours  : Hour of each daily quote. (Updated each 'tic').
///   quotes : Daily quotes. (Updated each 'tic').
///   invData: Data of the investor
///            Extra nicks have an empty <dailyInvestorData>.
/// \s, f, [i...], [f...], <dailyInvestorData> -> <dailyChart>
new : nick, close, Hours, Quotes, invData;

/// \<dailyChart> -> JS
toJs = \C -> return [
    C[nick],
    C[close],
    arr.map(C[Hours], math.itof),
    C[Quotes],
    dailyInvestorData.toJs(C[invData])
  ];;

/// \JS -> <dailyChart>
fromJs = \A -> {
  if (arr.size(A[4]) == 3)
    return new(
      A[0],
      A[1],
      arr.map(A[2], math.ftoi),
      A[3],
      dailyInvestorData.fromJs(A[4][0])
    );
  else if (arr.size(A[4]) == 0)
    return new(
      A[0],
      A[1],
      arr.map(A[2], math.ftoi),
      A[3],
      dailyInvestorData.mkEmpty()
    );
  else
    return new(
      A[0],
      A[1],
      arr.map(A[2], math.ftoi),
      A[3],
      dailyInvestorData.fromJs(A[4])
    );
  };
