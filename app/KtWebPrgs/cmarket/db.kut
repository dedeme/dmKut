// Copyright 12-Jun-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Data base management.

import "data/cts";
import "db/calendarTb";
import "db/quotesDb";
import "db/cosTb";
import "db/svCodesTb";
import "db/activityTb";
import "db/investorsTb";
import "db/acc/diariesDb";
import "db/acc/profitsDb";
import "db/trading/closesTb";
import "db/trading/refsTb";
import "db/invOperationsTb";
import "db/daily/dailyChartsTb";
import "db/daily/cosSelTb";

/// Initialize data base.
/// \->()
init = \ -> {
  file.mkdir(cts.dataPath);
  unlock();
  calendarTb.init();
  quotesDb.init();
  cosTb.init();
  svCodesTb.init();
  activityTb.init();
  investorsTb.init();
  diariesDb.init();
  profitsDb.init();
  closesTb.init();
  refsTb.init();
  invOperationsTb.init();
  dailyChartsTb.init();
  cosSelTb.init();
};

/// Lock data base.
/// Intended to be used by 'server_stop'
/// Returns 'true' if the data base could be locked.
/// \ -> b
lock = \ -> {
  p = path.cat([cts.dataPath, "lock"]);
  if (file.exists(p)) {
    timeOut = time.now() + 10000;
    while () {
      if (time.now() > timeOut) return false;
      if (!file.exists(p)) break;
      sys.sleep(500);
    }
  }
  file.write(p, "");
  return true;
};

/// Unlock data base.
/// Intended to be used by 'server_stop'
/// \ -> ()
unlock = \ -> file.del(path.cat([cts.dataPath, "lock"]));;

/// Returns true if 'path' exists.
///   rpath: File path relative to 'cts.dataPath'.
/// \s -> b
exists = \rpath -> return file.exists(path.cat([cts.dataPath, rpath]));;

/// Returns the absolute path of 'rpath'.
///   rpath: File path relative to 'cts.dataPath'.
/// \s -> s
pathOf = \rpath -> return path.cat([cts.dataPath, rpath]);;

/// Read a table.
///   rpath: File path relative to 'cts_data_path()'.
/// \s -> s
read = \rpath -> {
  p = path.cat([cts.dataPath, "lock"]);
  if (file.exists(p)) {
    timeOut = time.now() + 10000;
    while () {
      if (time.now() > timeOut)
        sys.throw(str.fmt("Date base locked reading '%v'", [rpath]));
      if (!file.exists(p)) break;
      sys.sleep(500);
    }
  }
  return file.read(path.cat([cts.dataPath, rpath]));
};

/// Write text in table
///   rpath: File path relative to 'cts.dataPath'.
///   text: Text to write.
/// \s, s -> ()
write = \rpath, text -> {
  if (!lock())
    sys.throw(str.fmt("Date base locked writing '%v'", [rpath]));

  file.write(path.cat([cts.dataPath, rpath]), text);
  unlock();
};
