// Copyright 13-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Last closes table.

import "db";
import "data/cts";

tradingPath = "trading";
closesPath = path.cat([tradingPath, "closes.tb"]);

/// Initializes data base
/// \ -> ()
init = \ -> {
  file.mkdir(db.pathOf(tradingPath));
  if (!db.exists(closesPath)) write({});
};

/// Reads table. Closes table is a dictionary:
///   For companies and 'cts.meNick' -> {nick->[isFromHistoric, close]}
///   For indexes -> {nick->[isFromHistoric, [currentValue, yesterdayValue]]}
/// \ -> {[b,f]...}
read = \ -> return js.r(db.read(closesPath));;

/// Read table with only closes. {nick -> close}
/// \ -> {f...}
readOnlyCloses = \ -> {
  R = {};
  for (k, V = read()) {
    isIndex = arr.any(cts.IxNicks, \n -> return k == n;);
    if (isIndex) dic.put(R, k, V[1][0]);
    else dic.put(R, k, V[1]);
  }
  return R;
};

/// Writes table.
///   closes: Dictionary:
///     For companies and 'cts.meNick' -> {nick->[isFromHistoric, close]}
///     For indexes -> {nick->[isFromHistoric, [currentValue, yesterdayValue]]}
/// \{[b,f]...} -> ()
write = \Cs -> db.write(closesPath, js.w(Cs));;
