// Copyright 12-Jun-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Speedometers page.

import "KtWeb/rp";
import "libdm/log";
import "data/cts";
import "data/acc/ann";
import "data/acc/ldg";
import "data/acc/settlement";
import "data/acc/pf";
import "db/acc/diariesDb";
import "db/trading/closesTb";
import "db/trading/refsTb";
import "db/invOperationsTb";

/// \m -> ()
process = \Rq -> {
  switch (Rq.rq) {
    "idata": {
      Closes = closesTb.readOnlyCloses();
      Refs = refsTb.read();

      Cos = {}; // {[f, f, f]...} :: {nick -> [price, value, ref]}
      Ys = diariesDb.investorYears();
      Anns = !!Ys ? diariesDb.investorAnns(Ys[0]) : [];
      :settlement set = ann.mkSettlement(Anns);
      if (!!set.Errors) for (e = set.Errors) log.error(e);
      :ldg L = set.ledger;
      Pf = set.Portfolio;

      cash = L.cash;
      equity = L.equity;
      for (nk, V = Pf) {
        stocks = math.itof(V[0]);
        price = stocks * V[1];

        clOp = dic.get(Closes, nk);
        cl = !!clOp ? stocks * clOp! : price;

        rfOp = dic.get(Refs, nk);
        rf = !rfOp ? price : stocks * rfOp![1];

        CoOp = dic.get(Cos, nk);
        if (!!CoOp) {
          Co = CoOp!;
          Cos[nk] = [Co[0] + price, Co[1] + cl, Co[2] + rf];
        } else {
          dic.put(Cos, nk, [price, cl, rf]);
        }
      }
      sys.print(rp.mk({
        cos: Cos,
        cash,
        equity
      }));
    }
    default: sys.throw("Value of rq (" + Rq.rq + ") is not valid");
  }
};
