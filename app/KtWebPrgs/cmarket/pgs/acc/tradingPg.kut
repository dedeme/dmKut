// Copyright 15-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Accounting trading page.

import "KtWeb/rp";
import "libdm/log";
import "data/cts";
import "data/acc/ann";
import "data/acc/settlement";
import "data/acc/pf";
import "data/invOperation";
import "db/acc/diariesDb";
import "db/trading/closesTb";
import "db/trading/refsTb";
import "db/invOperationsTb";
import "qspr";

/// \m -> ()
process = \Rq -> {
  switch (Rq.rq) {
    "idata": {
      Ok = [true];
      Oprs = invOperationsTb.read();
      Rebuys = {}; // {s.} :: {nick -> date}

      Ys = diariesDb.investorYears();
      for (y = Ys[:2]) ann.rebuys(Rebuys, diariesDb.investorAnns(y));
      Anns = !!Ys ? diariesDb.investorAnns(Ys[0]) : [];
      :settlement set = ann.mkSettlement(Anns);
      if (!!set.Errors) {
        Ok! = false;
        for (e = set.Errors) log.error(e);
      }

      sys.print(rp.mk({
        ok: Ok!,
        portfolio: set.Portfolio,
        invOperations: arr.map(Oprs, invOperation.toJs),
        closes: closesTb.readOnlyCloses(), // {f...} :: {nick -> close}
        rebuys: Rebuys
      }));
    }
    "update": {
      qspr.updateOperations();
      sys.print(rp.mkEmpty());
    }
    default: sys.throw("Value of rq (" + Rq.rq + ") is not valid");
  }
};
