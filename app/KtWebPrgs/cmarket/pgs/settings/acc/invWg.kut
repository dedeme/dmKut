// Copyright 10-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Accouning investor page

import "KtWeb/rp";
import "libdm/log";
import "data/cts";
import "data/acc/ann";
import "data/acc/ldg";
import "data/acc/settlement";
import "data/acc/annsTb";
import "db/acc/diariesDb";

/// \m -> ()
process = \Rq -> {
  switch (Rq.rq) {
    "idata": {
      year0 = Rq.year; // Can be ""

      Years = diariesDb.investorYears();
      year = arr.any(Years, \y -> return y == year0;) ? year0 : Years[0];
      Anns = diariesDb.investorAnns(year);
      :settlement set = ann.mkSettlement(Anns);
      Ok = [true];
      if (!!set.Errors) {
        for (e = set.Errors) log.error(e);
        Ok! = false;
      }
      sys.print(rp.mk({
        ok: Ok!,
        years: Years,
        year,
        anns: arr.map(Anns, ann.toJs),
        cash: set.ledger[ldg.cash]
      }));
    }
    "new": {
      :ann a = ann.fromJs(Rq.annotation);
      Years = diariesDb.investorYears();
      Anns = diariesDb.read(Years[0]);
      annsTb.add(Anns, a);
      diariesDb.write(Years[0], Anns);

      sys.print(rp.mkEmpty());
    }
    "del": {
      id = math.ftoi(Rq.annId);

      Years = diariesDb.investorYears();
      Anns = diariesDb.read(Years[0]);
      annsTb.del(Anns, id);
      diariesDb.write(Years[0], Anns);

      sys.print(rp.mkEmpty());
    }
    default: sys.throw("Value of rq (" + Rq.rq + ") is not valid");
  }
};
