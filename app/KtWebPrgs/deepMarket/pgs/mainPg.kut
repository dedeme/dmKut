// Copyright 26-Jul-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Main page.

import "KtWeb/rp";
import "data/cts";
import "db";
import "update";

/// \m -> ()
process = \Rq -> {
  switch (Rq.rq) {
    "idata": {
      Days = Rq.days;
      winV = [math.itos(cts.daysWinDefault)];
      lossV = [math.itos(cts.daysLossDefault)];
      if (arr.size(Days) == 2) {
        dir = "[" + Days[0] + "-" + Days[1] + "]";
        if (db.exists(dir)) {
          winV! = Days[0];
          lossV! = Days[1];
        }
      }
      sys.print(rp.mk({
        daysWin: winV!,
        daysLoss: lossV!
      }));
    }
    "results": {
      days = Rq.days; // s -> type [25-90]
      isNear = Rq.isNear; // b
      parNearStart = db.getNearStart(days);
      Results = isNear
        ? db.getNearResults(days)
        : db.getFarResults(days)
      ;
      sys.print(rp.mk({
        parNearStart,
        parFarStart: [cts.simFarStartStart, cts.simFarStartApp],
        parStep: isNear
            ? [cts.simNearStep, cts.simNearStep]
            : [cts.simFarStepStart, cts.simFarStepApp]
          ,
        results: Results
      }));
    }
    "center": {
      Qs = db.readQuotes();
      for (daysWin = cts.DaysWin) for (daysLoss = cts.DaysLoss) {
        dir = "[" + math.itos(daysWin) + "-" + math.itos(daysLoss) + "]";

        Pars = db.bestParams(dir);
        sTop = cts.simFarStartStart +
          math.itof(cts.simSteps) * (cts.simFarStepStart - cts.simNearStep);
        start0 = Pars[0] - math.itof(cts.simSteps / 2) * cts.simNearStep;
        start = math.round(
          start0 > cts.simFarStartStart
            ? start0 < sTop
              ? start0
              : sTop
            : cts.simFarStartStart
          , 4
        );
        aTop = cts.simFarStartApp +
          math.itof(cts.simSteps) * (cts.simFarStepApp - cts.simNearStep);
        appr0 = Pars[1] - math.itof(cts.simSteps / 2) * cts.simNearStep;
        appr = math.round(
          appr0 > cts.simFarStartApp
            ? appr0 < aTop
              ? appr0
              : aTop
            : cts.simFarStartApp
          , 4
        );

        db.setNearStart(dir, start, appr);
        update.updateGroup(Qs, daysWin, daysLoss, true);
      }
      update.updateRankings();
      sys.print(rp.mkEmpty());
    }
    default: sys.throw("Value of rq (" + Rq.rq + ") is not valid");
  }
};
