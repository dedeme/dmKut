// Copyright 06-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Paths page.

import "libdm/cgi";
import "db";
import "data/dpath";

/// Process request.
/// \m -> s
process = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "changeLang": {
      ConfTb = db.confTb();
      Cf = ConfTb.read();
      Cf.lang = Cf.lang == "es" ? "en" : "es";
      ConfTb.write(Cf);
      return cgi.rpEmpty();
    }
    "changeShowAll": {
      ConfTb = db.confTb();
      Cf = ConfTb.read();
      Cf.showAll = Cf.showAll == true ? false : true;
      ConfTb.write(Cf);
      return cgi.rpEmpty();
    }
    "new": {
      id = js.rs(Rq.id);
      path = js.rs(Rq.path);
      PathsTb = db.pathsTb();
      Ps = PathsTb.read();
      arr.push(Ps, dpath.new(id, path, true, false));
      PathsTb.write(Ps);
      return cgi.rpEmpty();
    }
    "changeShown": {
      id = js.rs(Rq.id);
      PathsTb = db.pathsTb();
      Ps = PathsTb.read();
      for (P = Ps)
        if (P.id == id) P.isShown = P.isShown ? false : true;
      PathsTb.write(Ps);
      return cgi.rpEmpty();
    }
    "delete": {
      id = js.rs(Rq.id);
      PathsTb = db.pathsTb();
      Ps = PathsTb.read();
      arr.filterIn(Ps, \P -> return P.id != id;);
      PathsTb.write(Ps);
      return cgi.rpEmpty();
    }
    "modify": {
      id = js.rs(Rq.id);
      newId = js.rs(Rq.newId);
      path = js.rs(Rq.path);
      PathsTb = db.pathsTb();
      Ps = PathsTb.read();
      for (P = Ps) if (P.id == id) {
        P.id = newId;
        P.path = path;
      }
      PathsTb.write(Ps);
      return cgi.rpEmpty();
    }
    default: sys.throw("Value of rq (" + rq + ") is not valid");
  }
};


