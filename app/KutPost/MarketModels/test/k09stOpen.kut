// Copyright 21-Mar-2024 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Strategy simple test.

import "libmkt/models";
import "libmkt/model";
import "libmkt/quotes";
import "libmkt/strategy";
import "libmkt/stRs";
import "extDb/quotesDb";
import "data/simParams";

/// Returns
///   {{ref:f, orders:i, hassets:f, hwithdrawals:f, cash:f,
///     buys:i, sales:i, profits:f}.} ::
///     {modelId: Rs}
/// \{*.} -> {*.}
run = \Rq -> {
  qts = quotesDb.read();
  :arr List = models.list();

  mdRs = {}; // {ref:f, orders:i, hassets:f, hwithdrawals:f, cash:f,
             //  buys:i, sales:i, profits:f}.}
  for (:model md = List) {
    Params = simParams.paramBases(md.id);
    :stRs Rs = strategy.open(md, qts, Params);
    mdRs.put(md.id, {
      ref: arr.reduce(arr.peek(Rs.Refs), 0.0, \r, e -> return r + e;),
      orders: arr.size(Rs.Orders),
      hassets: arr.peek(Rs.Hassets),
      hwithdrawals: arr.peek(Rs.Hwithdrawals),
      cash: Rs.cash,
      buys: arr.size(arr.peek(Rs.Buys)),
      sales: arr.size(arr.peek(Rs.Sales)),
      profits: arr.peek(Rs.Profits)
    });
  }

  return mdRs;
};
