// Copyright 28-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Daily profits data.

import "cts";
import "data/profitsEntry";

/// Index of <DailyProfitsEntry> at 0.
/// Date of calculation.
date = 0;
/// Index of <DailyProfitsEntry> at 1.
/// Profits on date (amount)
profits = 1;
/// Index of <DailyProfitsEntry> at 2.
/// Cash on date (amount)
cash = 2;
/// Index of <DailyProfitsEntry> at 3.
/// Minimum future profits on date (amount)
risk = 3;

/// Creates a new daily profits data.
/// \s, f, f, f -> a<DailyProfitsEntry>
new = \date, profits, cash, risk -> return [
  date, profits, cash, risk
];;

/// \<DailyProfitsEntry> -> s
toJs = \Dpe -> return js.wa([
  js.ws(Dpe[date]),
  js.wf(Dpe[profits]),
  js.wf(Dpe[cash]),
  js.wf(Dpe[risk])
]);;

/// \s -> <DailyProfitsEntry>
fromJs = \j -> {
  A = js.ra(j);
  return [
    js.rs(A[0]),
    js.rf(A[1]),
    js.rf(A[2]),
    js.rf(A[3])
  ];
};

/// Calculate weekly profits of investors.
///   invPs: Daily profits of investors.
/// \[[<DailyProfitsEntry>...]...] -> [<ProfitsEntry>...]
mkProfits = \InvPs -> {
  // [<ProfitsEntry>...]
  R = [];

  now = time.now();
  Date = [time.newDate(1, 1, time.year(now))];
  Ixs = arr.fromIter(iter.mp([0:cts.qlevels], \i -> return 0;));
  while (time.dfDays(Date!, now) <= 0) {
    if (time.weekday(Date!) == 0) {
      day = time.toStr(Date!);
      // [f...]
      Pfs = [];
      for (inv = 0:cts.qlevels) {
        Ix = [Ixs[inv]];
        // [DailyProfitsEntry...]
        Invp = InvPs[inv];
        while (Ix! < arr.size(Invp) & Invp[Ix!][date] <= day) {
          Ix! += 1;
        }
        if (Ix! > 0) {
          Ixs[inv] = Ix!;
          arr.push(Pfs, Invp[Ix! - 1][profits]);
        } else {
          if (arr.size(Invp) > 0) {
            arr.push(Pfs, Invp[0][profits]);
          } else {
            arr.push(Pfs, 1.0);
          }
        }
      }
      arr.push(R, profitsEntry.new(day, Pfs));
    }

    Date! = time.addDays(Date!, 1);
  }

  return R;
};
