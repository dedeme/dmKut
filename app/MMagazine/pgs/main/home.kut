// Copyright 03-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Home page.

import "libdm/log";
import "KtWeb/rp";
import "db";
import "ex/ktmarket/investors";
import "data/paramsEval";

/// \m -> s
process = \Rq -> {
  rq = js.rs(Rq.rq);
  switch (rq) {
    "idata": {
      Ips = arr.mp(
        investors.read(),
        \Ps -> return arr.mp(Ps, \p -> return js.rf(p););
      );
      Mds = ["QFIJO", "QMOV", "APRX"]; // ordered by investor!
      IParEvals = [];
      ParEvals = [];
      for (m, i = Mds) {
        Pevs = db.hotMapsDb(m).read()[0].entries;
        arr.push(ParEvals, arr.reduce(Pevs, Pevs[0], \Rs, E -> {
          if (paramsEval.eqParams(E[0], Ips[i])) arr.push(IParEvals, E);
          return E[paramsEval.eval] > Rs[paramsEval.eval] ? E : Rs;
        }));
      }
      return rp.mk({
        "iparamsEvals": js.wa(arr.mp(IParEvals, paramsEval.toJs)),
        "models": js.wa(arr.mp(Mds, js.ws)),
        "paramsEvals": js.wa(arr.mp(ParEvals, paramsEval.toJs))
      });
    }
    "getLog": return rp.mk({
      "log": log.readJs()
      });
    "resetLog": {
      log.reset();
      return rp.mkEmpty();
    }
    default: sys.fail("Value of rq (" + rq + ") is not valid");
  };
};
