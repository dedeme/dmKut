// Copyright 06-Jan-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

import "data/board";

// \<board>, s -> ()
makeMatch = \B, match -> {
  IsWhite = [true];
  for (mv = arr.mp(str.split(match, ""), \n -> return math.toInt(n);)) {
    board.put(B, mv, IsWhite!);
    IsWhite! = !IsWhite!;
  }
};

// \s -> s
mirror = \match -> {
  change = \c -> return switch(c) {
      "0": "6";
      "1": "5";
      "2": "4";
      "3": "3";
      "4": "2";
      "5": "1";
      "6": "0";
    };;
  R = [""];
  for (i = 0:str.len(match)) R! += change(match[i]);
  return R!;
};

run = \-> {
  R1 = board.new();
  makeMatch(R1, "323232");
  assert board.put(R1, 3, true) == board.win;
  R1b = board.new();
  makeMatch(R1b, "3232320");
  assert board.put(R1b, 2, false) == board.win;

  R21 = board.new();
  makeMatch(R21, "322210101140");
  assert board.put(R21, 0, true) == board.win;
  R22 = board.new();
  makeMatch(R22, "123632221116");
  assert board.put(R22, 4, true) == board.win;
  R23 = board.new();
  makeMatch(R23, "123642221116");
  assert board.put(R23, 3, true) == board.win;
  R24 = board.new();
  makeMatch(R24, "12364002111630");
  assert board.put(R24, 2, true) == board.win;

  R31 = board.new();
  makeMatch(R31, "00112233");
  assert board.put(R31, 4, true) == board.win;
  R32 = board.new();
  makeMatch(R32, "00223355");
  assert board.put(R32, 4, true) == board.win;
  R33 = board.new();
  makeMatch(R33, "224455");
  assert board.put(R33, 3, true) == board.win;
  R34 = board.new();
  makeMatch(R34, "223344");
  assert board.put(R34, 1, true) == board.win;

  R41 = board.new();
  makeMatch(R41, "34445656526");
  assert board.put(R41, 6, true) == board.win;
  R42 = board.new();
  makeMatch(R42, mirror("123632221116"));
  assert board.put(R42, 2, true) == board.win;
  R43 = board.new();
  makeMatch(R43, mirror("123642221116"));
  assert board.put(R43, 3, true) == board.win;
  R44 = board.new();
  makeMatch(R44, mirror("12364002111630"));
  assert board.put(R44, 4, true) == board.win;

  R51 = board.new();
  makeMatch(R51, "6322210101140");
  assert board.put(R51, 0, false) == board.win;
  R52 = board.new();
  makeMatch(R52, "0123632221116");
  assert board.put(R52, 4, false) == board.win;
  R53 = board.new();
  makeMatch(R53, "0123642221116");
  assert board.put(R53, 3, false) == board.win;
  R54 = board.new();
  makeMatch(R54, "012364002111630");
  assert board.put(R54, 2, false) == board.win;

  R0 = board.new();
  makeMatch(R0, "01234561234560012345665432101234560123456");
  assert board.put(R0, 0, false) == board.draw;

};
