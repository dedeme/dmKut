// Copyright 11-Oct-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Metadata management (Define d<book> and d<meta>).

import "meta";
import "book";

/// Returns [page metadata of file 'fpage'] or '[]' if it is not found.
///   pgMetas: Array with all the pages metadata.
///   fpage  : Page to search.
/// \[<meta>.], s -> ([<meta>] | [])
getCurrent = \PgMetas, fpage -> {
  for (:meta pgMeta = PgMetas)
    if (pgMeta.fpage == fpage) return [pgMeta];
  return [];
};

/// Returns [page metadata of the file previous to 'fpage'] or '[]' if it is
/// not found.
///   pgMetas: Array with all the pages metadata (sorted).
///   fpage  : Page to search.
/// \[<meta>.], s -> ([<meta>] | [])
getPrevious = \PgMetas, fpage -> {
  for (i, :meta pgMeta = PgMetas)
    if (pgMeta.fpage == fpage) return i > 0 ? [PgMetas[i - 1]] : [];
  return [];
};

/// Returns [page metadata of the file next to 'fpage'] or '[]' if it is
/// not found.
///   pgMetas: Array with all the pages metadata (sorted).
///   fpage  : Page to search.
/// \[<meta>.], s -> ([<meta>] | [])
getNext = \PgMetas, fpage -> {
  for (i, :meta pgMeta = PgMetas)
    if (pgMeta.fpage == fpage)
      return i < arr.size(PgMetas) - 1 ? [PgMetas[i + 1]] : [];
  return [];
};

// DB -----------------------------

/// Returns a book metadata of a directory.
///   Fkmds: .kmd files of a directory.
/// \[s] -> <book>
read = \Fkmds -> {
  bookNameV = [""];
  :arr PgMetas = [];

  for (fkmd = Fkmds) {
    :meta pgMeta = meta.new(fkmd[:-4], "", false, true, false);

    // Returns true for ending process.
    process = \line -> {
      l = str.trim(line);
      if (l == "") return false;
      if (l == "=") return true;

      if (l == "numbered") {
        pgMeta.numbered = true;
        return false;
      }

      if (l == "withoutUp") {
        pgMeta.withUp = false;
        return false;
      }

      if (l == "withDown") {
        pgMeta.withDown = true;
        return false;
      }

      ix = str.index(l, "=");
      if (ix == -1) {
        sys.println(str.fmt(
          "%v\n'=' is missing in metadada line:\n%v", [fkmd, line]
        ));
        return true;
      }
      key = str.rtrim(l[:ix]);
      value = str.ltrim(l[ix + 1:]);
      switch (key) {
        "book": bookNameV! = value;
        "title": pgMeta.title = value;
        default: {
          sys.println(str.fmt(
            "%v\nWrong key in metadada line:\n%v", [fkmd, line]
          ));
          return true;
        }
      }
      return false;
    };

    :file f = file.ropen(fkmd);
    lOp = f.readLine();
    if (!!lOp & str.trim(lOp!) == "=") {
      while () {
        lOp = f.readLine();
        if (!lOp) {
          sys.println("%v\nUnexpected end of file reading metadata.", [fkmd]);
          break;
        }
        if (process(lOp!)) break;
      }
    }
    f.close();

    PgMetas.push(pgMeta);
  }

  PgMetas.sort(\:meta p1, :meta p2 -> return p1.fpage < p2.fpage;);
  return book.new(bookNameV!, PgMetas);
};
