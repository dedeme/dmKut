// Copyright 16-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Definition process.

import "inner";

/// Divides dd - dt
///   tx: Text to process.
/// \s -> \s///   Store: Array which will be modified in place, with next values:
///     0: Already read text.
///     1: Current mark.
///     2: Rest of text.
split = \tx -> {
  ix = str.index(tx, "\n");
  if (ix == -1) return "<dt>" + tx + "</dt>\n<dd></dd>\n";
  return "<dt>" + inner.process(tx[:ix]) + "</dt>\n" +
    "<dd>" + inner.process(tx[ix + 1:]) + "</dd>\n"
  ;
};

/// Processes mark '<{d' (Definition).
///   tx: Text to process.
/// \s -> \s
process = \tx -> {
  ix = str.index(tx, "\n");
  if (ix == -1) return "\n<dl></dl>\n";

  Tx = [str.ltrim(tx[ix:])];
  Ps = [];
  while () {
    tx = Tx!;
    if (tx == "") break;
    Ix = [0];
    while () {
      Ix! = str.indexFrom(tx, "\n", Ix!);
      if (Ix! == -1) {
        Ix! = str.len(tx);
        break;
      }
      if (Ix! == str.len(tx) - 1 | tx[Ix! + 1] != " ") {
        break;
      }
      Ix! += 1;
    }
    arr.push(Ps, split(tx[:Ix!]));
    Tx! = str.trim(tx[Ix!:]);
  }

  return "\n<dl>\n" + arr.join(Ps, "") + "</dl>\n";
};

