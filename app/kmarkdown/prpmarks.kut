// Copyright 16-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Processing paragraph marks.

import "inner";

/// Processes '* '
/// \s -> s
h1 = \tx -> return "<h1>" + inner.process(tx) + "</h1>\n";;

/// Processes '*** '
/// \s -> s
h3 = \tx -> return "<h3>" + inner.process(tx) + "</h3>\n";;

/// Processes '<|f' (frame)
/// \s, b -> s
frame = \tx, isWhite -> {
  class = isWhite ? "fm" : "fm2";
  Align = [""];
  Tx = [tx];
  if (str.starts(Tx!, "c")) {
    Align! = ' align="center"';
    Tx! = Tx![1:];
  }

  return str.fmt(
    "<table%s><tr><td class='%s'>\n%s\n</td></tr></table>\n", [
      Align!, class, inner.process(Tx!)
    ]
  );
};

/// Processes '<|i' (image)
/// \s, b -> s
img = \tx, withFrame -> {
  float = str.starts(tx, "l") ? "l" : str.starts(tx, "r") ? "r" : "c";
  Src = [float == "c" ? tx : tx[1:]];
  style = " style='padding:4px;" +
    (float == "c"
      ? "text-align:center"
      : "float:" + (float == "l" ? "left": "right")
    ) + "' "
  ;

  N = [""];
  while () {
    if (Src! == "") break;
    ch =Src!!;
    if (ch >= "0" & ch <= "9") {
      N! = N! + ch;
    } else {
      break;
    }
    Src! = Src![1:];
  }

  n = N!;
  size = n == "" ? "" : " style='width:" + n + "px' ";

  Src! = str.trim(Src!);
  if (Src! == "") {
    err.show("Image source is empty", tx);
    return tx;
  }
  if (str.index(Src!, ".") == -1) Src! = Src! + ".png";
  if (str.index(Src!, "/") == -1) Src! = path.cat(["img", Src!]);
  src = Src!;
  class = withFrame ? " class='fm' " : "";
  return "<div " + style + "><img src='" + src +
      "'" + class + size + "></div>\n";
};

/// Processes '<|a' (alignmment)
/// \s, b -> s
align = \tx, isWhite -> {
  inStyle = [isWhite ? "background-color:  rgb(255, 250, 250);" : ""];
  Tx = [tx];
  if (str.starts(Tx!, "|")) {
    inStyle! = inStyle! +
      "border: 1px solid rgb(110,130,150); padding: 4px;border-radius: 4px;";
    Tx! = Tx![1:];
  }
  outStyle = ["padding:4px;"];
  if (str.starts(Tx!, "l") | str.starts(Tx!, "r")) {
    outStyle! = outStyle! + "float:" + (Tx!! == "l" ? "left" : "right");
    Tx! = Tx![1:];
  } else {
    outStyle! = outStyle! + "text-align:center";
  }

  return "<div style='" + outStyle! + "'><div style='" + inStyle! +
    "'>" + inner.process(Tx!) + "</div></div>";
};

