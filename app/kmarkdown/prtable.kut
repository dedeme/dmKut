// Copyright 16-Mar-2022 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Table process.

import "inner";
import "err";

/// Proceses mark '<{T' and '<{t' (Table).
///   tx: Text to process.
///   centered: If is 'true' the table will be centered.
/// \s, b -> \s
process = \tx, centered -> {
  table = centered ? "\n<table align='center'>\n" : "\n<table>\n";
  Tx = [tx];
  TdClass = [""];
  if (tx! == "|") {
    TdClass! = " class='kmd-fm2' ";
    Tx! = Tx![1:];
  }
  tdClass = TdClass!;

  Fmt = [""];
  while () {
    tx = Tx!;
    if (tx == "" | str.index("lcr", tx!) == -1) {
      break;
    }
    Fmt! += tx!;
    Tx! = Tx![1:];
  }
  fmt = Fmt!;
  lfmt = str.len(fmt);
  if (lfmt == 0) {
    tx2 = (centered ? "<{T" : "<{t") + tx + "\n}>";
    err.show("Column alignment missing", tx2);
    return tx2;
  }

  ix = str.index(Tx!, "\n");
  if (ix == -1) return table + "</table>\n";

  Tx! = str.ltrim(Tx![ix:]);
  Ps = [];
  C = [0];
  while () {
    tdfmt = switch (fmt[C!]) {
      "c": "center";
      "r": "right";
      default: "left";
    };
    C! = C! + 1;
    if (C! == lfmt) C! = 0;

    tx = Tx!;
    if (tx == "") break;
    Ix = [0];
    while () {
      Ix! = str.indexFrom(tx, "\n", Ix!);
      if (Ix! == -1) {
        Ix! = str.len(tx);
        break;
      }
      if (Ix! == str.len(tx) - 1 | tx[Ix! + 1] != " ") {
        break;
      }
      Ix! += 1;
    }
    tx2 = inner.process(tx[:Ix!]);
    arr.push(
      Ps,
      "<td style='text-align:" + tdfmt + "'" + tdClass + ">" +
        (tx2 == '-' ? "" : tx2) + "</td>\n"
    );
    Tx! = str.trim(tx[Ix!:]);
  }

  Trs = [];
  Tds = [];
  N = [0];
  for (p = Ps) {
    arr.push(Tds, p);
    N! = N! + 1;
    if (N! == lfmt) {
      arr.push(Trs, "<tr>\n" + arr.join(Tds, "") + "</tr>\n");
      arr.clear(Tds);
      N! = 0;
    }
  }
  if (N! > 0) {
    for (i = 0:N!) arr.push(Tds, "<td></td>\n");
    arr.push(Trs, "<tr>\n" + arr.join(Tds, "") + "</tr>\n");
  }

  return table + arr.join(Trs, "") + "</table>\n";
};

