// Copyright 09-Jan-2023 ÂºDeme
// GNU General Public License - V3 <http://www.gnu.org/licenses/>

/// Match generator for connect4 game.

import "data/match";

/// Create a new mach without players.
/// Function fput take as argument a 'JSONized' integer between 0 and 6 (both
/// inclusive)
/// \i, i -> <match>
new = \id, timeByPlayer -> {
  Board = [
    "       ",
    "       ",
    "       ",
    "       ",
    "       ",
    "       "
  ];
  IsWhite = [true];

  // ---------------------------------------------

  //  Board position value (returns "O", "X", " " or "")
  //  \<board>, i, i -> s
  checkerAt = \row, col ->
    return row >= 0 & row < 6 & col >= 0 & col < 7 ? Board[row][col] : "";
  ;


  fput = \mov -> {
    column = js.ri(mov);
    if (column < 0 | column > 6) return match.reject;
    if (Board[0][column] != " ") return match.reject;

    checker = IsWhite! ? "O": "X";
    IsWhite! = !IsWhite!;

    Row = [5];
    for (r, i = Board) {
      if (r[column] != " ") {
        Row! = i - 1;
        break;
      }
    }
    row = Row!;
    r = Board[row];
    Board[row] = r[:column] + checker + r[column + 1:];

    check = \x, y -> return checkerAt(row + x, column + y) == checker;;

    if (check(-1, -1)) {
      if (check(-2, -2)) {
        if (check(-3, -3)) return match.win;
        if (check(1, 1)) return match.win;
      } else {
        if (check(1, 1) & check(2, 2)) return match.win;
      }
    } else {
      if (check(1, 1) & check(2, 2) & check(3, 3)) return match.win;
    }

    if (check(-1, 1)) {
      if (check(-2, 2)) {
        if (check(-3, 3)) return match.win;
        if (check(1, -1)) return match.win;
      } else {
        if (check(1, -1) & check(2, -2)) return match.win;
      }
    } else {
      if (check(1, -1) & check(2, -2) & check(3, -3)) return match.win;
    }

    if (check(0, -1)) {
      if (check(0, -2)) {
        if (check(0, -3)) return match.win;
        if (check(0, 1)) return match.win;
      } else {
        if (check(0, 1) & check(0, 2)) return match.win;
      }
    } else {
      if (check(0, 1) & check(0, 2) & check(0, 3)) return match.win;
    }

    if (check(1, 0) & check(2, 0) & check(3, 0)) return match.win;

    if (str.index(Board[0], " ") == -1) return match.draw;

    return match.more;
  };

  // ---------------------------------------------

  return match.mk(id, timeByPlayer, fput);
};
